/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as AppTransactionsIndexRouteImport } from './routes/_app/transactions/index'
import { Route as AppDealsIndexRouteImport } from './routes/_app/deals/index'
import { Route as AppAnalyticsIndexRouteImport } from './routes/_app/analytics/index'
import { Route as AppTransactionsDealIdRouteImport } from './routes/_app/transactions/$dealId'
import { Route as AppDealsCreateRouteImport } from './routes/_app/deals/create'
import { Route as AppDealsDealIdRouteImport } from './routes/_app/deals/$dealId'
import { Route as AppAnalyticsDealIdRouteImport } from './routes/_app/analytics/$dealId'

const SigninLazyRouteImport = createFileRoute('/signin')()

const SigninLazyRoute = SigninLazyRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/signin.lazy').then((d) => d.Route))
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)
const AppTransactionsIndexRoute = AppTransactionsIndexRouteImport.update({
  id: '/transactions/',
  path: '/transactions/',
  getParentRoute: () => AppRoute,
} as any)
const AppDealsIndexRoute = AppDealsIndexRouteImport.update({
  id: '/deals/',
  path: '/deals/',
  getParentRoute: () => AppRoute,
} as any)
const AppAnalyticsIndexRoute = AppAnalyticsIndexRouteImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => AppRoute,
} as any)
const AppTransactionsDealIdRoute = AppTransactionsDealIdRouteImport.update({
  id: '/transactions/$dealId',
  path: '/transactions/$dealId',
  getParentRoute: () => AppRoute,
} as any)
const AppDealsCreateRoute = AppDealsCreateRouteImport.update({
  id: '/deals/create',
  path: '/deals/create',
  getParentRoute: () => AppRoute,
} as any)
const AppDealsDealIdRoute = AppDealsDealIdRouteImport.update({
  id: '/deals/$dealId',
  path: '/deals/$dealId',
  getParentRoute: () => AppRoute,
} as any)
const AppAnalyticsDealIdRoute = AppAnalyticsDealIdRouteImport.update({
  id: '/analytics/$dealId',
  path: '/analytics/$dealId',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/signin': typeof SigninLazyRoute
  '/dashboard': typeof AppDashboardRoute
  '/': typeof AppIndexRoute
  '/analytics/$dealId': typeof AppAnalyticsDealIdRoute
  '/deals/$dealId': typeof AppDealsDealIdRoute
  '/deals/create': typeof AppDealsCreateRoute
  '/transactions/$dealId': typeof AppTransactionsDealIdRoute
  '/analytics': typeof AppAnalyticsIndexRoute
  '/deals': typeof AppDealsIndexRoute
  '/transactions': typeof AppTransactionsIndexRoute
}
export interface FileRoutesByTo {
  '/signin': typeof SigninLazyRoute
  '/dashboard': typeof AppDashboardRoute
  '/': typeof AppIndexRoute
  '/analytics/$dealId': typeof AppAnalyticsDealIdRoute
  '/deals/$dealId': typeof AppDealsDealIdRoute
  '/deals/create': typeof AppDealsCreateRoute
  '/transactions/$dealId': typeof AppTransactionsDealIdRoute
  '/analytics': typeof AppAnalyticsIndexRoute
  '/deals': typeof AppDealsIndexRoute
  '/transactions': typeof AppTransactionsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/signin': typeof SigninLazyRoute
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/': typeof AppIndexRoute
  '/_app/analytics/$dealId': typeof AppAnalyticsDealIdRoute
  '/_app/deals/$dealId': typeof AppDealsDealIdRoute
  '/_app/deals/create': typeof AppDealsCreateRoute
  '/_app/transactions/$dealId': typeof AppTransactionsDealIdRoute
  '/_app/analytics/': typeof AppAnalyticsIndexRoute
  '/_app/deals/': typeof AppDealsIndexRoute
  '/_app/transactions/': typeof AppTransactionsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/signin'
    | '/dashboard'
    | '/'
    | '/analytics/$dealId'
    | '/deals/$dealId'
    | '/deals/create'
    | '/transactions/$dealId'
    | '/analytics'
    | '/deals'
    | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/signin'
    | '/dashboard'
    | '/'
    | '/analytics/$dealId'
    | '/deals/$dealId'
    | '/deals/create'
    | '/transactions/$dealId'
    | '/analytics'
    | '/deals'
    | '/transactions'
  id:
    | '__root__'
    | '/_app'
    | '/signin'
    | '/_app/dashboard'
    | '/_app/'
    | '/_app/analytics/$dealId'
    | '/_app/deals/$dealId'
    | '/_app/deals/create'
    | '/_app/transactions/$dealId'
    | '/_app/analytics/'
    | '/_app/deals/'
    | '/_app/transactions/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  SigninLazyRoute: typeof SigninLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/transactions/': {
      id: '/_app/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof AppTransactionsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/deals/': {
      id: '/_app/deals/'
      path: '/deals'
      fullPath: '/deals'
      preLoaderRoute: typeof AppDealsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/analytics/': {
      id: '/_app/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AppAnalyticsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/transactions/$dealId': {
      id: '/_app/transactions/$dealId'
      path: '/transactions/$dealId'
      fullPath: '/transactions/$dealId'
      preLoaderRoute: typeof AppTransactionsDealIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/deals/create': {
      id: '/_app/deals/create'
      path: '/deals/create'
      fullPath: '/deals/create'
      preLoaderRoute: typeof AppDealsCreateRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/deals/$dealId': {
      id: '/_app/deals/$dealId'
      path: '/deals/$dealId'
      fullPath: '/deals/$dealId'
      preLoaderRoute: typeof AppDealsDealIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/analytics/$dealId': {
      id: '/_app/analytics/$dealId'
      path: '/analytics/$dealId'
      fullPath: '/analytics/$dealId'
      preLoaderRoute: typeof AppAnalyticsDealIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRoute
  AppIndexRoute: typeof AppIndexRoute
  AppAnalyticsDealIdRoute: typeof AppAnalyticsDealIdRoute
  AppDealsDealIdRoute: typeof AppDealsDealIdRoute
  AppDealsCreateRoute: typeof AppDealsCreateRoute
  AppTransactionsDealIdRoute: typeof AppTransactionsDealIdRoute
  AppAnalyticsIndexRoute: typeof AppAnalyticsIndexRoute
  AppDealsIndexRoute: typeof AppDealsIndexRoute
  AppTransactionsIndexRoute: typeof AppTransactionsIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRoute,
  AppIndexRoute: AppIndexRoute,
  AppAnalyticsDealIdRoute: AppAnalyticsDealIdRoute,
  AppDealsDealIdRoute: AppDealsDealIdRoute,
  AppDealsCreateRoute: AppDealsCreateRoute,
  AppTransactionsDealIdRoute: AppTransactionsDealIdRoute,
  AppAnalyticsIndexRoute: AppAnalyticsIndexRoute,
  AppDealsIndexRoute: AppDealsIndexRoute,
  AppTransactionsIndexRoute: AppTransactionsIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  SigninLazyRoute: SigninLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
